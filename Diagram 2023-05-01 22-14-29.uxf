<diagram program="umletino" version="15.1"><zoom_level>6</zoom_level><element><id>UMLClass</id><coordinates><x>156</x><y>54</y><w>126</w><h>138</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Button::Clickable
{Abstract}
--
-x_: float
-y_: float
--
+Clickable(x: float, y: float)
/+check_if_over(x: float, y: float): bool/
/+mouse_over(x: float, y: float): void/
/+mouse_clicked(x: float, y:float): void/
/+draw(win: sf::RenderWindow): void/
//getter setters
+get_x(): float
+get_y(): float
+set_x(x: float): void
+set_y(y: float): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>294</x><y>216</y><w>306</w><h>156</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Button::SquareButton
--
-length_: float
-width_: float
-txt_: String
-color_ : sf::Color
--
+SquareButton(txt: String, width: float, length: float)
/+action(td: &amp;TowerDefence::TowerDefence): void/
+check_if_over(x: float, y: float): bool
+mouse_over(x: float, y: float): void
+mouse_clicked(x: float, y:float): void
+draw(win: sf::RenderWindow): void
// getters setters
+get_length(): float
+get_width(): float
+set_length(length: float): void
+set_width(width: float): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>306</y><w>132</w><h>120</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Button::CircleButton
--
-r_: float
--
+CircleButton(r: float)
/+action()/
+check_if_over(x: float, y: float): bool
+mouse_over(x: float, y: float): void
+mouse_clicked(x: float, y:float): void
+draw(win: sf::RenderWindow): void
// getters setters
+get_r(): float
+set_r(r: float): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>48</x><y>186</y><w>168</w><h>132</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>260;10;10;200</additional_attributes></element><element><id>Relation</id><coordinates><x>264</x><y>186</y><w>102</w><h>42</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;150;50</additional_attributes></element><element><id>UMLClass</id><coordinates><x>150</x><y>306</y><w>126</w><h>168</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Button::Slider
--
-length_: float
-width_: float
-value_: float 
--
+Slider()
/+action()/
+check_if_over(x: float, y: float)
+mouse_over(x: float, y: float)
+mouse_clicked(x: float, y:float)
+draw(win: sf::RenderWindow)
// getters setters
+get_length(): float
+get_width(): float
+get_value(): float
+set_length(length: float): void
+set_width(width: float): void
+set_value(value: float): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>204</x><y>186</y><w>42</w><h>132</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>50;10;10;200</additional_attributes></element><element><id>UMLClass</id><coordinates><x>354</x><y>432</y><w>180</w><h>60</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Button::SwitchDisplaysButton
--
-status_obj: status
--
+SwitchDisplaysButton(stat: Status)
+action(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>408</x><y>366</y><w>18</w><h>78</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;110</additional_attributes></element><element><id>UMLClass</id><coordinates><x>480</x><y>642</y><w>126</w><h>36</h></coordinates><panel_attributes>&lt;&lt;Enumeration&gt;&gt;
TowerDefence::mode
--
main_window</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>534</x><y>534</y><w>126</w><h>60</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Status
--
-status_: mode
--
+set_status(stat: mode): void
+get_status(): mode
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>462</x><y>486</y><w>84</w><h>90</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=1
m1=0..n</panel_attributes><additional_attributes>10;10;120;130</additional_attributes></element><element><id>UMLClass</id><coordinates><x>732</x><y>612</y><w>126</w><h>114</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
TowerDefence
--
-window: sf::RenderWindow
-delay: sf::Time
-status_: Status
-font_: sf::Font
--
+TowerDefence()
+run(): void
#init(): void
#update(): void
#draw(): void</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>654</x><y>558</y><w>90</w><h>132</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-
m2=1
m1=1</panel_attributes><additional_attributes>130;200;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>540</x><y>588</y><w>54</w><h>66</h></coordinates><panel_attributes>lt=-</panel_attributes><additional_attributes>70;10;10;90</additional_attributes></element><element><id>UMLClass</id><coordinates><x>804</x><y>222</y><w>126</w><h>84</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Display
{Abstract}
--
+Display()
/+init(): void/
/+update(): void/
/+draw(): void/
~Display()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>654</x><y>396</y><w>186</w><h>72</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
MainMenu
--
-sb_vector: _vector_SquareButton_
-sdb_vector: std::vector&lt;SwitchDisplayButton&gt; 
--
+init(window_mode: Status*, font_: sf::Font ): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>744</x><y>300</y><w>126</w><h>108</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>190;10;10;160</additional_attributes></element><element><id>Relation</id><coordinates><x>744</x><y>462</y><w>60</w><h>162</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=1</panel_attributes><additional_attributes>80;250;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>528</x><y>432</y><w>138</w><h>42</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=0..n</panel_attributes><additional_attributes>210;10;10;50</additional_attributes></element><element><id>Relation</id><coordinates><x>594</x><y>312</y><w>78</w><h>120</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=0..n</panel_attributes><additional_attributes>100;180;10;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>858</x><y>396</y><w>186</w><h>54</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
GameStage
--
-sdb_vector: std::vector&lt;SwitchDisplayButton&gt; 
-enemy_path_vector: std::vector&lt;EnemyPath&gt; 
-enemy_vector: std::vector&lt;Enemy&gt; 
--
+init(window_mode: Status*, font_: sf::Font ): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>888</x><y>300</y><w>72</w><h>108</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;100;160</additional_attributes></element><element><id>Relation</id><coordinates><x>840</x><y>444</y><w>102</w><h>180</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=1</panel_attributes><additional_attributes>10;280;150;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1074</x><y>396</y><w>186</w><h>54</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
CreateStage
--
-sdb_vector: std::vector&lt;SwitchDisplayButton&gt; 
--
+init(window_mode: Status*, font_: sf::Font ): void
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>924</x><y>294</y><w>246</w><h>114</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;390;170</additional_attributes></element><element><id>Relation</id><coordinates><x>852</x><y>444</y><w>312</w><h>186</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=1</panel_attributes><additional_attributes>10;290;500;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>1176</x><y>84</y><w>126</w><h>132</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
Enemy
--
-speed: float
-x_: float
-y_: float
-enemy_pat_nr: std::size_t
--
+Enemy()
+Enemy( x: float, y: float, speed_: float)
+update(next_x: float, next_y: float, radius: float): void
+draw(win: sf::RenderWindow&amp;, x: float, y: float): void
+get_enemy_pat_nr(): std::size_t
~Enemy()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1026</x><y>90</y><w>126</w><h>132</h></coordinates><panel_attributes>&lt;&lt;Class&gt;&gt;
EnemyPath
--
-radius_: float
-x_: float
-y_: float
-visibility_: bool
--
+EnemyPath( x: float, y: float, radius: float, visibility: bool)
+draw(win: sf::RenderWindow&amp;, x: float, y: float): void
+set_visibility(visibility: bool)
+get_x(): float
+get_y(): float
+get_radius(): float
~Enemy()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>984</x><y>216</y><w>90</w><h>192</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=0..n</panel_attributes><additional_attributes>10;300;130;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1026</x><y>210</y><w>204</w><h>198</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
m1=0..n</panel_attributes><additional_attributes>10;310;320;10</additional_attributes></element></diagram>